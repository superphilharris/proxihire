<?php
namespace Application\Service;

use Application\Helper\ClassHelper;
use Applciation\Model\CategoryInterface;
use Application\Model\AssetInterface;
use Application\Mapper\AssetMapperInterface;
use Application\Mapper\AssetRateMapperInterface;
use Application\Mapper\AssetPropertyMapperInterface;
use Application\Mapper\UrlMapperInterface;

class AssetService implements AssetServiceInterface
{
<<<<<<< HEAD
	protected $assetMapper;
	protected $assetPrototype;
	protected $urlMapper;
	protected $assetRateMapper;
	protected $assetPropertyMapper;
=======
	/**
	 * {@inheritDoc}
	 */
	public function getAssetsInCategory($category,$filters=NULL)
	{
		// TODO: implement
		$assets = array();
		for($i=1; $i<100; $i++){
			array_push($assets, $this->getAsset($i));
		}
		return $assets;
	}
>>>>>>> master

	public function __construct( 
		AssetInterface $assetPrototype,
		AssetMapperInterface $assetMapper,
		UrlMapperInterface $urlMapper,
		AssetRateMapperInterface $assetRateMapper,
		AssetPropertyMapperInterface $assetPropertyMapper
	){
		$this->assetPrototype = $assetPrototype;
		$this->assetMapper = $assetMapper;
		$this->urlMapper = $urlMapper;
		$this->assetRateMapper = $assetRateMapper;
		$this->assetPropertyMapper = $assetPropertyMapper;
	}
	/**
	 * {@inheritDoc}
	 */
	public function getAssetList($category, $filters=NULL, $location=NULL, $number=50)
	{
<<<<<<< HEAD
		// Validate arguments
		ClassHelper::checkAllArguments(__METHOD__, func_get_args(), array("Application\Model\CategoryInterface","object|null","string|null","integer"));

		// jih: accumulate location into filters, if not already there

		$assetArray=array();
		for( $i=0; $i<$number; $i++){
			$assetArray[]=new $this->assetPrototype;
		}
		$this->assetMapper->setPrototypeArray($assetArray);
		$this->assetMapper->findByCategory( $category, $filters );
		$this->assetMapper->getUrls($this->urlMapper);
		// jih: $this->assetMapper->getAssetRates($this->assetRateMapper);
		// jih: $this->assetMapper->getAssetProperties($this->assetPropertyMapper);
		return $this->assetMapper->getAssets();
=======
		// TODO: implement
		$properties = array();
		array_push($properties, array("length" => rand(1,100)/10));
		array_push($properties, array("width" => rand(1,100)/20));
		array_push($properties, array("gender" => rand(0,1)==1 ? "male":"female"));
		if(rand(0,2) == 1) $properties[2]["gender"] = "neither";
		
		
		$asset = new Asset();
		// $asset->setCategory("ladders");
		$asset->setId($id);
		$asset->setProperties($properties);
		return $asset;
>>>>>>> master
	}

}
?>
